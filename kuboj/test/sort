function int[] quicksort(array) {
  if (length(array) <= 1) {
    return array;
  } else {
    var int pivot;
    pivot = array[length(array) - 1];
    var int num_of_less_than_pivot;
    num_of_less_than_pivot = 0;
    var int j;
    for (j < length(array); j += 1) {
      if (array[j] < pivot) {
        num_of_less_than_pivot += 1;
      }
    }

    var int[] less;
    less = int[num_of_less_than_pivot];
    var int less_pointer;
    less_pointer = 0;

    var int[] greater;
    greater = int[length(array) - 1 - num_of_less_than_pivot];
    var int greater_pointer;
    greater_pointer = 0;

    j = 0;
    for (j < length(array); j += 1) {
      if (array[j] < pivot) {
        less[less_pointer] = array[j];
        less_pointer += 1;
      } else {
        greater[greater_pointer] = array[j];
        greater_pointer += 1; 
      }
    }
  
    var int[] sorted_less;
    sorted_less = int[less_pointer];
    sorted_less = quicksort(less);
    var int[] sorted_greater;
    sorted_greater = int[greater_pointer];
    sorted_greater = quicksort(greater);

    var int[] new_array;
    new_array = int[length(array)];
    j = 0;
    for (j < length(sorted_less); j += 1) {
      new_array[j] = sorted_less[j];
    }
    new_array[length(sorted_less)] = pivot;
    j = 0;
    for (j < length(sorted_greater); j += 1) {
      new_array[j + length(sorted_less)] = sorted_greater[j];
    }

    return new_array;
  }
}

function int main() {
  var int n;
  n = readint();
  var int[] a;
  a = int[n];
  var int i;  
  for (i < n; i += 1) {
    a[i] = readint();
  }

  var int[] sorted;
  sorted = int[n];
  sorted = quicksort(a);

  i = 0;
  var string newline;
  newline = "\n";
  for (i < n; i += 1) {
    writeint(sorted[i]);
    writestr(newline);
  }
  return 0;
}